#!/bin/sh

# Prints some information about the system, just like neofetch or pfetch.
# Depends on:
# Miguel Neto (11/2024)

display_info(){
d_usr=$USER@$(uname -n)
d_os=$(sed '1!d;s/NAME=//g;s/"//g' /etc/os-release)
d_k=$(cat /proc/sys/kernel/osrelease)
d_upt=$(uptime -p | awk '{sub("minutes","mins"); print $2,$3,$4,$5}')
d_scren=$(xrandr | sed '1!d;s/.*current.//g;s/,.*//g;s/ //g')
d_desk=$(xprop -id "$(xprop -root -notype | awk '$1=="_NET_SUPPORTING_WM_CHECK:"{print $5}')" -notype -f _NET_WM_NAME 8t | grep "_NET_WM_NAME = " | cut --delimiter=' ' --fields=3 | cut --delimiter='"' --fields=2)
d_font=$(fc-match | sed 's/\..*//g')
d_cpu=$(grep -o 'model name.*' /proc/cpuinfo | sed '1!d;s/.*:.//g;s/(.*)//g;s/CPU//')
d_gpu=$(lspci | grep 'VGA' | sed 's/^.*:.*://g;s/(.*)//g')
d_usedmem=$(free -m | awk '/Mem/{print $3}')"MiB"
d_freemem=$(free -m | awk '/Mem/{print $2}')"MiB"
d_arch=$(uname -m)
qtd=$(echo "$d_usr" | sed 's/./\-/g')
d_memperct=$(free -m | awk '/Mem/{print ($5+$3)/$2 * 100}')
host_one=$(cat /sys/devices/virtual/dmi/id/product_name)
host_two=$(cat /sys/devices/virtual/dmi/id/product_version)
}
pkgs=$(
  has() { [ -x "$(command -v "$1")" ]; }
  {
    has emerge     && printf '%s\n' "${EPREFIX}"/var/db/pkg/*/* # emerge portage
    has pacman     && pacman -Q # pacman
    has dpkg       && dpkg --list # apt dpkg
    has rpm        && rpm -qa # rpm dnf yum
    has apk        && apk list # apk
    has xbps-query && xbps-query -l # xbps
    has pkg_info   && pkg_info -mz # pkg, OpenBSD
    has pkg        && printf '%s\n' /var/db/pkg/* # pkg, FreeBSD
  } | wc -l
)

normal() {
display_info
cat <<EOF
                   $d_usr
                   $qtd
       ____        OS: $d_os
   ___|    |___    Host: $host_one $host_two
  \------------/   Kernel: $d_k
      |o_o |       Uptime: $d_upt
      |:_/ |       Shell: ${SHELL##*/}
      /    \       Terminal: ${TERM%%-*}
     //   \ \      Resolution: $d_scren
    (|     | )     DE/WM: $d_desk
   /'|_    /'\     Font: $d_font
   \___)=(___/     CPU: $d_cpu
                   GPU:$d_gpu
		   Memory: $d_usedmem / $d_freemem (${d_memperct%%.*}%)
                   Architecture: $d_arch ($(getconf LONG_BIT)-bit)
EOF
}

petit() {
cat <<EOF
    ___
   (.Â· |     os: $(sed '1!d;s/NAME=//g;s/"//g' /etc/os-release)
   (<> |     kernel: $(cat /proc/sys/kernel/osrelease)
  / __  \    pkgs: $pkgs
 ( /  \ /|   shell: ${SHELL##*/}
_/\ __)/_)   de/wm: $(xprop -id "$(xprop -root -notype | awk '$1=="_NET_SUPPORTING_WM_CHECK:"{print $5}')" -notype -f _NET_WM_NAME 8t | grep "_NET_WM_NAME = " | cut --delimiter=' ' --fields=3 | cut --delimiter='"' --fields=2)
\/-____\/

EOF
}

case $1 in
	-p) petit ;;
	 *) normal ;;
esac
